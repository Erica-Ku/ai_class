1. 개발자라면
 - 입력을 일단 미니배치 형태로 나눌 수 있어야 함
    => 리스트
    => Numpy Array로 변환 (리스트 -> 행렬)
    => 행렬 연산을 사용할 수 있음
    => 행렬을 텐서로 변경할 수 있음(TF)

2. 학습
    => 기울기
    => 절편

AI 프로그래밍 정리
 - 언덕 등반 알고리즘(min, max) => 지역 검색
    - 전역 검색이 결과가 월등히 좋음
    - 지역 최적화는 보장
    - 알고리즘에 제약이 필요
 - TSP, N-Queen => 유전 알고리즘
    - 전역 알고리즘 => BF
 - 경사하강법
    - 영상처리, 음성처리, 딥러닝, 시계열
    - 기울기, 절편


# 머신러닝/딥러닝
0. 팀빌딩
 - 데이터 사이언스(문제 정의, 가설 설립) => 작게 정의, 실현 가능한 가설
1. Epoch = 1 (2주)
 - 데이터 분석가
    - 문제 정의 / 전처리, 머신러닝, 딥러닝
    - 모델 생성
 - 개발자 (2명)
    - BE => 모델 호출해서 REST API를 생성
    - FE => 사용자 입력을 받고 시각화
 - 협업
    - 문서 => 동시 작성이 가능한 것을 선택
    - 해당 문서는 절대 포트폴리오로 사용X
    - 깃헙 => 차례 차례 (branch)
2. Epoch = 3 (1주)
 - 데이터 분석가
    - 다른 데이터를 추가하지 말기
    - 기존 데이터를 이용해서 성능 향상
    - 독립변수 변경, 종속 변경, 알고리즘 변경
 - BE => 스키마랑 기타 API 확정
 - FE => UI/UX 확정
3. Epoch = 5 (중간점검)