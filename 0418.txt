# 상태(state)
-> 상태 관리자(redux)

# 언덕 등반 알고리즘
-> 특정 좌표(x, y)를 기준으로 가장 낮/높은 값을 찾기
-> 좌표를 기반으로 좌우 값을 좀 더 살펴보기

# 그래프 => TSP
-> 간선과 정점으로 구성된 자료구조
-> TSP => 간선의 합이 최소임을 원함
-> 간선
 - 방향성이 있는 것 => 네트워크
 - 방향성이 없는 것 => 순수 그래프 (조합 그래프)

# TSP
-> 시작지점 => 랜덤을 사용함
 - 랜덤을 사용해서 그나마 값이 적정값이라 가정함
-> first_choice 사용
 - 지역 최적을 검색
언덕 등반
1) 정점 => 인접행렬(G -> M, M -> G, NetworkX)
2) 거리 => 맨하탄, 유클리드 => 테이블
3) 계산(최단거리) => 최적?

# First first_choice
# 언덕 등반
# 전역 검색
+ Mutation(임의의 자료, Noise)